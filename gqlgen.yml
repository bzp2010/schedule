# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema: internal/handler/graphql/schema/*.graphql

# Where should the generated server code go?
exec:
  filename: internal/handler/graphql/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/federation.go
#   package: graph

# Where should any generated models go?
model:
  filename: internal/handler/graphql/models/models_gen.go
  package: models

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: internal/handler/graphql/resolvers
  package: resolvers

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
#struct_tag: gqlgen

# Optional: turn on to use []Thing instead of []*Thing
omit_slice_element_pointers: true

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
#struct_fields_always_pointers: false

# Optional: turn off to make resolvers return values instead of pointers for structs
#resolvers_always_return_pointers: false

#return_pointers_in_unmarshalinput: false

# Optional: set to speed up generation time by not performing a final validation pass.
skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/bzp2010/schedule/internal/database/models"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.Int64
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
  Int64:
    model: github.com/99designs/gqlgen/graphql.Int64
  Task:
    fields:
      type:
        resolver: true
      rules:
        resolver: true
  TaskRule:
    fields:
      task:
        resolver: true
